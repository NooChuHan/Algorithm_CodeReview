// 문제 설명
// 차가 지나가는 구간이 담긴 routes가 매개변수로 주어질때,
// 모든 차량이 한번은 단속용 카메라를 만나도록 하려면 최소 몇 대의 카메라를 설치해야 하는지를 확인하는 문제이다.

// 예시
// routes
// [[-20,15], [-14,-5], [-18,-13], [-5,-3]]
// return 2

function solution(routes) {
    let answer = 1; // 최소한 하나의 차량은 카메라를 설치해야 함으로 초기값을 1로 설정함.
    routes.sort((a, b) => a[0] - b[0]); // routes 배열을 시작 지점(a[0])을 기준으로 오름차순으로 정렬함.

    let out = routes[0][1]; // 현재 카메라가 커버하는 최대 범위를 저장하는 변수를 초기화함.

    for (let i = 1; i < routes.length; i++) {
        if (out < routes[i][0]) {
            // 현재 카메라 범위보다 다음 차량의 진입 지점이 더 멀리 있다면,
            // 새로운 카메라를 설치해야 함.
            answer++; // 카메라 설치 개수를 증가시킴.
            out = routes[i][1]; // 현재 카메라의 범위를 다음 차량의 범위로 업데이트함.
        }

        if (out > routes[i][1]) {
            // 현재 카메라 범위가 다음 차량의 나가는 지점보다 크다면,
            // 다음 차량이 카메라에 포함되지 않으므로 현재 카메라 범위를 업데이트함.
            out = routes[i][0];
        }
    }
    return answer; // 최소한의 카메라 개수를 반환함.
}
